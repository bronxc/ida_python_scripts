import idaapi
import idautils
#from idaapi import plugin_t
import requests
import json
import os
import xlsxwriter
import sip
from time import localtime, strftime

from idaapi import PluginForm
from PyQt5.QtWidgets import QLineEdit, QCheckBox, QPushButton, QLabel, QRadioButton, QVBoxLayout, QHBoxLayout, QGridLayout
from PyQt5.QtGui import QColor
from PyQt5.QtCore import Qt, QObject

# from ida_kernwin import *


class malwaresForm(PluginForm):
    def make_xlsx(self, name):
        save_path = os.environ['USERPROFILE'] + "\\Desktop"
        filename = name + ".xlsx"
        workbook = xlsxwriter.Workbook(save_path + "\\" + filename.replace("http://","").replace("/","_"), {'strings_to_urls': False})
        return workbook

    def pr(self):
        a = malwares()

        if self.radioButton1.isChecked():
            result = a.URL_search(self.lineEdit1.text().strip())
            workbook = self.make_xlsx(self.lineEdit1.text().strip())

            worksheet1 = workbook.add_worksheet("same_hostname")
            worksheet2 = workbook.add_worksheet("downloaded_malicious_file")
            worksheet3 = workbook.add_worksheet("downloaded_safe_file")

            worksheet1.write(0, 0, "virustotal URL Analysis Detection")
            worksheet1.write(0, 1, str(result['positives']))
            worksheet2.write(0, 0, "virustotal URL Analysis Detection")
            worksheet2.write(0, 1, str(result['positives']))
            worksheet3.write(0, 0, "virustotal URL Analysis Detection")
            worksheet3.write(0, 1, str(result['positives']))

            row = 1
            for i in result['same_hostname']:
                worksheet1.write(row, 0, i[0])
                worksheet1.write(row, 1, i[1])
                row += 1

            row = 1
            for i in result['downloaded_malicious_file']:
                worksheet2.write(row, 0, i[0])
                worksheet2.write(row, 1, i[1])
                row += 1

            row = 1
            for i in result['downloaded_safe_file']:
                worksheet3.write(row, 0, i)
                row += 1

            workbook.close()
            idaapi.info("URL analysis Completed")

        elif self.radioButton2.isChecked():
            result = a.hash_search(self.lineEdit1.text().strip())
            workbook = self.make_xlsx(self.lineEdit1.text().strip())

            worksheet1 = workbook.add_worksheet("detection_binary")
            worksheet1.write(0, 0, "taglist")
            worksheet1.write(0, 1, ', '.join(result['taglist']))
            worksheet1.write(1, 0, "another_filename")
            worksheet1.write(1, 1, ', '.join(result['another_filename']))
            worksheet1.write(2, 0, "virustotal_result")
            worksheet1.write(2, 1, result['virustotal_result'])
            worksheet1.write(3, 0, "ai_score")
            worksheet1.write(3, 1, result['ai_score'])

            row = 3
            for i in result['detection_binary']:
                worksheet1.write(row, 0, i[0])
                worksheet1.write(row, 1, i[1])
                row += 1

            workbook.close()
            idaapi.info("Hash analysis Completed")

        elif self.radioButton3.isChecked():
            result = a.IP_or_hostname_search(self.lineEdit1.text().strip(),1)
            workbook = self.make_xlsx(self.lineEdit1.text().strip())

            worksheet5 = workbook.add_worksheet("hostname_history")
            worksheet1 = workbook.add_worksheet("undetected_sample_communicated")
            worksheet2 = workbook.add_worksheet("detected_sample_communicated")
            worksheet3 = workbook.add_worksheet("undetected_sample_downloaded")
            worksheet4 = workbook.add_worksheet("detected_sample_downloaded")

            worksheet5.write(0, 0, "hostname_history")
            worksheet5.write(1, 0, "location")
            worksheet5.write(1, 1, result['location'])

            worksheet1.write(0, 0, "undetected_sample_communicated")
            worksheet1.write(1, 0, "location")
            worksheet1.write(1, 1, result['location'])

            worksheet2.write(0, 0, "detected_sample_communicated")
            worksheet2.write(1, 0, "location")
            worksheet2.write(1, 1, result['location'])

            worksheet3.write(0, 0, "undetected_sample_downloaded")
            worksheet3.write(1, 0, "location")
            worksheet3.write(1, 1, result['location'])

            worksheet4.write(0, 0, "detected_sample_downloaded")
            worksheet4.write(1, 0, "location")
            worksheet4.write(1, 1, result['location'])

            #worksheet5.write(0, 0, i[0])

            row = 2
            for i in result['hostname_history']:
                worksheet5.write(row, 0, i)
                row += 1

            row = 2
            for i in result['undetected_sample_communicated']:
                worksheet1.write(row, 0, i)
                row += 1

            row = 2
            for i in result['detected_sample_communicated']:
                worksheet2.write(row, 0, i[0])
                worksheet2.write(row, 1, i[1])
                row += 1

            row = 2
            for i in result['undetected_sample_downloaded']:
                worksheet3.write(row, 0, i)
                row += 1

            row = 2
            for i in result['detected_sample_downloaded']:
                worksheet4.write(row, 0, i[0])
                worksheet4.write(row, 1, i[1])
                row += 1

            workbook.close()
            idaapi.info("IP analysis Completed")


        elif self.radioButton4.isChecked():
            result = a.IP_or_hostname_search(self.lineEdit1.text().strip(),2)
            workbook = self.make_xlsx(self.lineEdit1.text().strip())

            worksheet5 = workbook.add_worksheet("hostname_history")
            worksheet1 = workbook.add_worksheet("undetected_sample_communicated")
            worksheet2 = workbook.add_worksheet("detected_sample_communicated")
            worksheet3 = workbook.add_worksheet("undetected_sample_downloaded")
            worksheet4 = workbook.add_worksheet("detected_sample_downloaded")
            worksheet6 = workbook.add_worksheet("detected_url")

            worksheet5.write(0, 0, "hostname_history")
            worksheet5.write(1, 0, "location")
            worksheet5.write(1, 1, result['location'])

            worksheet1.write(0, 0, "undetected_sample_communicated")
            worksheet1.write(1, 0, "location")
            worksheet1.write(1, 1, result['location'])

            worksheet2.write(0, 0, "detected_sample_communicated")
            worksheet2.write(1, 0, "location")
            worksheet2.write(1, 1, result['location'])

            worksheet3.write(0, 0, "undetected_sample_downloaded")
            worksheet3.write(1, 0, "location")
            worksheet3.write(1, 1, result['location'])

            worksheet4.write(0, 0, "detected_sample_downloaded")
            worksheet4.write(1, 0, "location")
            worksheet4.write(1, 1, result['location'])

            worksheet6.write(0, 0, "detected_url")
            worksheet6.write(1, 0, "location")
            worksheet6.write(1, 1, result['location'])

            #worksheet5.write(0, 0, i[0])

            row = 2
            for i in result['hostname_history']:
                worksheet5.write(row, 0, i)
                row += 1

            row = 2
            for i in result['undetected_sample_communicated']:
                worksheet1.write(row, 0, i)
                row += 1

            row = 2
            for i in result['detected_sample_communicated']:
                worksheet2.write(row, 0, i[0])
                worksheet2.write(row, 1, i[1])
                row += 1

            row = 2
            for i in result['undetected_sample_downloaded']:
                worksheet3.write(row, 0, i)
                row += 1

            row = 2
            for i in result['detected_sample_downloaded']:
                worksheet4.write(row, 0, i[0])
                worksheet4.write(row, 1, i[1])
                row += 1

            row = 2
            for i in result['detected_url']:
                worksheet6.write(row, 0, i[0])
                worksheet6.write(row, 1, i[1])
                row += 1

            workbook.close()
            idaapi.info("Hostname analysis Completed")

    def OnCreate(self, form):
        self.parent = self.FormToPyQtWidget(form)
        self.label1 = QLabel("Input: ")
        self.label2 = QLabel("malwares.com search tool")
        self.label2.setAlignment(Qt.AlignCenter | Qt.AlignVCenter)

        self.lineEdit1 = QLineEdit()
        self.pushButton1 = QPushButton("Enter")
        self.pushButton1.clicked.connect(self.pr)

        layout = QVBoxLayout()
        layout.addWidget(self.label2)

        self.radioButton1 = QRadioButton("URL")
        self.radioButton2 = QRadioButton("hash")
        self.radioButton3 = QRadioButton("IP")
        self.radioButton4 = QRadioButton("hostname")

        GL1 = QGridLayout()
        GL1.addWidget(self.radioButton1, 0, 0)
        GL1.addWidget(self.radioButton2, 0, 1)
        GL1.addWidget(self.radioButton3, 0, 2)
        GL1.addWidget(self.radioButton4, 0, 3)
        layout.addLayout(GL1)

        GL2 = QGridLayout()
        GL2.addWidget(self.label1, 0, 0)
        GL2.addWidget(self.lineEdit1, 0, 1)
        GL2.addWidget(self.pushButton1, 0, 2)
        layout.addLayout(GL2)

        self.parent.setLayout(layout)

    def OnClose(self, form):
        pass

class malwares():
    def __init__(self):
        self.api_key = "<api-key>"

    def hash_search(self, sha256):
        detection_binary = []
        params = {'api_key': self.api_key, 'hash': sha256}
        response = requests.get('https://www.malwares.com/api/v2/file/mwsinfo', params=params)
        json_response = response.json()
        try:
            virustotal_result = str(json_response['virustotal']['positives']) + "/" + str(json_response['virustotal']['total'])
        except:
            virustotal_result = ""

        try:
            for anal_envir in json_response['behavior'].keys():
                for i in json_response['behavior'][anal_envir]['detection']:
                    detection_binary.append([i['path'],i['description']])
        except:
            detection_binary = []

        ai_score = json_response['ai_score']
        taglist = json_response['taglist']

        response = requests.get('https://www.malwares.com/api/v2/file/addinfo', params=params)
        json_response = response.json()
        try:
            another_filename = json_response['filename']
        except:
            another_filename = ""

        return {'virustotal_result':virustotal_result, 'detection_binary':detection_binary, 'ai_score':ai_score, 'taglist':taglist, 'another_filename':another_filename}

    def URL_search(self, URL):
        same_hostname = []
        downloaded_malicious_file = []
        downloaded_safe_file = []
        params = {'api_key': self.api_key, 'url':URL}
        response = requests.post('https://www.malwares.com/api/v2/url/info', data=params)
        json_response = response.json()
        positives = json_response['virustotal']['positives']

        if json_response['same_hostname']['list']:
            for data in json_response['same_hostname']['list']:
                try:
                    same_hostname.append([data['url'], str(data['positive']) + "/" + str(data['total'])])
                except:
                    same_hostname.append([data['url'],""])

        try:
            for sample_list in json_response['downloaded_malicious_file']['list']:
                downloaded_malicious_file.append([sample_list['sha256'], str(data['positive']) + "/" + str(data['total'])])
        except:
            downloaded_malicious_file = []

        try:
            for sample_list in json_response['downloaded_safe_file']['list']:
                downloaded_safe_file.append(sample_list['sha256'])
        except:
            downloaded_safe_file = []

        return {'positives':positives, 'same_hostname':same_hostname,'downloaded_malicious_file':downloaded_malicious_file, 'downloaded_safe_file':downloaded_safe_file}

    def IP_or_hostname_search(self, data, string_type):
        undetected_sample_communicated = []
        detected_sample_communicated = []
        detected_sample_downloaded = []
        undetected_sample_downloaded = []
        detected_url = []
        hostname_history = []

        if string_type == 1:
            string_type = "ip"
        elif string_type == 2:
            string_type = "hostname"
        else:
            string_type = "error"

        params = {'api_key': self.api_key, string_type: data}
        response = requests.get('https://www.malwares.com/api/v2/'+string_type+'/info', params=params)
        response_json = response.json()

        try:
            location = response_json['location']['cname']
        except:
            location = []
            for i in response_json['ip_history']['list']:
                if not i['cname']:
                    aa = "Not Found"
                else:
                    aa = i['cname']
                location.append([i['ip'],aa])
            location = str(location)

        try:
            for sample_list in response_json['undetected_communicating_file']['list']:
                undetected_sample_communicated.append(sample_list['sha256'])
        except:
            undetected_sample_communicated = []

        try:
            for sample_list in response_json['detected_communicating_file']['list']:
                detected_sample_communicated.append([sample_list['sha256'], str(sample_list['positives']) + "/" + str(sample_list['total'])])
        except:
            detected_sample_communicated = []

        try:
            for sample_list in response_json['detected_downloaded_file']['list']:
                detected_sample_downloaded.append([sample_list['sha256'], str(sample_list['positives']) + "/" + str(sample_list['total'])])
        except:
            detected_sample_downloaded = []

        try:
            for sample_list in response_json['undetected_downloaded_file']['list']:
                undetected_sample_downloaded.append(sample_list['sha256'])
        except:
            undetected_sample_downloaded = []

        try:
            for url_list in response_json['detected_url']['list']:
                detected_url.append([url_list['url'], str(url_list['positives']) + "/" + str(url_list['total'])])
        except:
            detected_url = []

        try:
            whois = response_json['whois']
        except:
            whois = ""

        try:
            for hostname_list in response_json['hostname_history']['list']:
                hostname_history.append(hostname_list['hostname'])
        except:
            hostname_history = []

        return {'detected_sample_communicated':detected_sample_communicated, 'undetected_sample_communicated':undetected_sample_communicated,
        'detected_sample_downloaded':detected_sample_downloaded, 'undetected_sample_downloaded':undetected_sample_downloaded,
        'hostname_history':hostname_history, 'whois':whois, 'location':location, 'detected_url':detected_url}

if __name__ == "__main__":
    #a = malwares()
    #print(a.IP_or_hostname_search("61.106.2.96",1))
    plg = malwaresForm()
    plg.Show("malwares.com")